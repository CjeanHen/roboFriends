{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","value","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","fetch","then","res","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAA1B,cACpB,gCACE,6BAAMF,IACR,4BAAKC,WCcIK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACE,mCAEAA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACE,cAAC,EAAD,CAEEV,KAAMO,EAAOG,GAAGV,KAChBE,GAAIK,EAAOG,GAAGR,GACdD,MAAOM,EAAOG,GAAGT,OAHZM,EAAOG,GAAGR,UCMXS,EAdG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAChC,OACE,qBAAKV,UAAU,MAAf,SACA,uBACEA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,EACVI,MAAOL,OCAEM,EARA,SAACC,GACd,OACE,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAO,kBAAmBC,OAAQ,SAArE,SACGJ,EAAMK,YCeEC,E,kDAjBb,WAAYN,GAAQ,IAAD,8BACjB,gBACKO,MAAQ,CACXC,UAAU,GAHK,E,8DAODC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAK1B,OADqBG,KAAKJ,MAAlBC,SACU,+DAAyCG,KAAKX,MAAMK,a,GAd/CQ,aCiDZC,G,wDA3Cb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEnB,YAAauB,EAAMC,OAAOnB,SAb1C,EAAKS,MAAQ,CACXnB,OAAQ,GACRK,YAAa,IAJH,E,gEAQO,IAAD,OAClByB,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAAExB,OAAQkC,S,+BAOjC,IAAD,EACyBX,KAAKJ,MAA7BnB,EADD,EACCA,OAAQK,EADT,EACSA,YACV8B,EAAiBnC,EAAOoC,QAAO,SAAAC,GACnC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAGvD,OAAQtC,EAAOwC,OAGb,sBAAK5C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CACEU,aAAciB,KAAKI,eACnBtB,YAAakB,KAAKJ,MAAMd,cAE1B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUL,OAAQmC,WAV1B,gD,GA1BcV,cCKHgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4d946cf6.chunk.js","sourcesContent":["import React from 'react'\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n      <img alt='robot' src={`https://robohash.org/${id}?200x200`} />\n      <div>\n        <h2>{ name }</h2>\n      <p>{ email }</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport Card from './Card'\n\nconst CardList = ({ robots }) => {\n return (\n   <>\n   {\n   robots.map((user, i) => {\n       return (\n         <Card\n           key={robots[i].id}\n           name={robots[i].name}\n           id={robots[i].id}\n           email={robots[i].email}\n         />\n       )\n     })\n   }\n  </>\n )\n}\n\nexport default CardList\n","import React from 'react'\n\nconst SearchBox = ({ searchField, searchChange }) => {\n  return (\n    <div className='pa2'>\n    <input\n      className='pa3 ba b--green bg-lightest-blue'\n      type='search'\n      placeholder='search robots'\n      onChange={searchChange}\n      value={searchField}\n    />\n    </div>\n  )\n}\n\nexport default SearchBox\n","import React from 'react'\n\nconst Scroll = (props) => {\n  return (\n    <div style={{ overflowY: 'scroll', border:'1px solid black', height: '800px'}}>\n      {props.children}\n    </div>\n  )\n}\n\nexport default Scroll\n","import React, { Component } from 'react'\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super()\n    this.state = {\n      hasError: false\n    }\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true })\n  }\n\n  render() {\n    const { hasError } = this.state\n    return hasError ? <h1>Oooooops. That's embarrassing</h1> : this.props.children\n  }\n}\n\nexport default ErrorBoundry\n","import React, { Component } from 'react'\nimport CardList from '../components/CardList'\nimport SearchBox from '../components/SearchBox'\nimport Scroll from '../components/Scroll'\nimport ErrorBoundry from '../components/ErrorBoundry'\nimport './App.css'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      robots: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n      .then(users => this.setState({ robots: users}))\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchField: event.target.value })\n  }\n\n  render() {\n    const { robots, searchField } = this.state\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase())\n    })\n\n    return !robots.length ?\n    <h1>Loading...</h1> :\n    (\n      <div className='tc'>\n        <h1 className='f1'>RoboFriends</h1>\n        <SearchBox\n          searchChange={this.onSearchChange}\n          searchField={this.state.searchField}\n        />\n        <Scroll>\n          <ErrorBoundry>\n            <CardList robots={filteredRobots} />\n          </ErrorBoundry>\n        </Scroll>\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}